
from pathlib import Path

# Read configuration
configfile: "config/config.yaml"

SOURCEDIR = Path(config["sourcedir"])
OUTDIR = Path(config["results"])
READSDIR = Path(config["readsdir"])
genome_fasta = Path(config["genome_fasta"])
existing_annotation = Path(config["existing_annotation"])


READS = [filepath for filepath in Path(READSDIR).glob('**/*')]



rule all:
    input:
        # sam_files = expand( OUTDIR / "{sample}.sam", sample=[ read.name for read in READS]).
        # OUTDIR / "spliceJns.txt",
        clean_sam = expand( OUTDIR / "{sample}_clean.sam", sample=[ read.name for read in READS])




rule minimap2_align:
    input:
        genome = genome_fasta,
        fq = READSDIR / "{sample}"
    params:
        outdir = OUTDIR,
        opts = config["minimap2_opts"]
    output:
        sam_files = OUTDIR / "{sample}.sam"
    threads: 4
    singularity:
        'docker://quay.io/biocontainers/minimap2:2.17--h5bf99c6_4'
    shell:
        '''
        minimap2 \
            -t 4 \
            -ax splice \
            {params.opts} \
            {input.genome} \
            {input.fq} > {output.sam_files}
        '''


# TALON
rule get_SJs_from_gtf:
    input:
        annotation = existing_annotation,
        genome = genome_fasta
    params:
        outdir = OUTDIR
    output:
        splicejns = OUTDIR / "spliceJns.txt"
    threads: 1
    singularity:
        "docker://biocontainers/transcriptclean:v2.0.2_cv1"
    shell:
        '''
        get_SJs_from_gtf \
            --f {input.annotation} \
            --g {input.genome} \
            --o {output.splicejns}
        '''


rule transcriptclean:
    input:
        sam_files = rules.minimap2_align.output.sam_files,
        genome = genome_fasta,
        splicejns = rules.get_SJs_from_gtf.output.splicejns
    params:
        outdir = OUTDIR
    output:
        clean_sam = OUTDIR / "{sample}_clean.sam"
    threads: 10
    singularity:
        "docker://biocontainers/transcriptclean:v2.0.2_cv1"
    shell:
        '''
        TranscriptClean \
            --sam {input.sam_files} \
            --genome {input.genome} \
            -t 10 \
            --spliceJns {input.splicejns} \
            --outprefix {output.clean_sam}
        '''

